package mynightout.entity;
// Generated 4 DEC 2013 5:28:19 AM by Hibernate Tools 3.6.0


import java.util.Date;

/**
 * Reservation generated by hbm2java
 */
public class Reservation  implements java.io.Serializable {


     private ReservationPk id;
     private Date reservationDate;
     private String trapezi;
     private String reservationStatus;
     //βοηθητικές μεταβλητές για τα test αυτά θα σταματήσουν να χρησιμοποιούνται
    //όταν γίνει η κανονική συνδεση με τη βαση.
        private String username;
        private boolean cancelSuccessful;
        private boolean successCreate;
        private String clubName;

    public Reservation() {
    }
    
    public Reservation(ReservationPk id, String username){
        this.id=id;
        this.username=username;
    }
    public Reservation(ReservationPk id, Date reservationDate, 
            String trapezi, String reservationStatus) {
       this.id = id;
       this.reservationDate = reservationDate;
       this.trapezi = trapezi;
       this.reservationStatus = reservationStatus;
    }

    public Reservation(ReservationPk id) {
        this.id = id;
    }
   
    public ReservationPk getId() {
        return this.id;
    }
    
    public void setId(ReservationPk id) {
        this.id = id;
    }
    public Date getReservationDate() {
        return this.reservationDate;
    }
    
    public void setReservationDate(Date reservationDate) {
        this.reservationDate = reservationDate;
    }
    public String getTrapezi() {
        return this.trapezi;
    }
    
    public void setTrapezi(String trapezi) {
        this.trapezi = trapezi;
    }
    
    public String getReservationStatus() {
        return this.reservationStatus;
    }
    
    public void setReservationStatus(String reservationStatus) {
        this.reservationStatus = reservationStatus;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public boolean isCancelSuccessful() {
        return cancelSuccessful;
    }

    public void setCancelSuccessful(boolean cancelSuccessful) {
        this.cancelSuccessful = cancelSuccessful;
    }

    public boolean isSuccessCreate() {
        return successCreate;
    }

    public void setSuccessCreate(boolean successCreate) {
        this.successCreate = successCreate;
    }

    public String getClubName() {
        return clubName;
    }

    public void setClubName(String clubName) {
        this.clubName = clubName;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 31 * hash + (this.id != null ? this.id.hashCode() : 0);
        hash = 31 * hash + (this.reservationDate != null ? this.reservationDate.hashCode() : 0);
        hash = 31 * hash + (this.trapezi != null ? this.trapezi.hashCode() : 0);
        hash = 31 * hash + (this.reservationStatus != null ? this.reservationStatus.hashCode() : 0);
        hash = 31 * hash + (this.username != null ? this.username.hashCode() : 0);
        hash = 31 * hash + (this.cancelSuccessful ? 1 : 0);
        hash = 31 * hash + (this.successCreate ? 1 : 0);
        hash = 31 * hash + (this.clubName != null ? this.clubName.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Reservation other = (Reservation) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        if (this.reservationDate != other.reservationDate && (this.reservationDate == null || !this.reservationDate.equals(other.reservationDate))) {
            return false;
        }
        if ((this.trapezi == null) ? (other.trapezi != null) : !this.trapezi.equals(other.trapezi)) {
            return false;
        }
        if ((this.reservationStatus == null) ? (other.reservationStatus != null) : !this.reservationStatus.equals(other.reservationStatus)) {
            return false;
        }
        if ((this.username == null) ? (other.username != null) : !this.username.equals(other.username)) {
            return false;
        }
        if (this.cancelSuccessful != other.cancelSuccessful) {
            return false;
        }
        if (this.successCreate != other.successCreate) {
            return false;
        }
        if ((this.clubName == null) ? (other.clubName != null) : !this.clubName.equals(other.clubName)) {
            return false;
        }
        return true;
    }

    


}


